정규화
: 테이블을 올바르게 변경하고 분할하는 것

- 중복된 데이터가 반복되지 않도록 해야 한다.

설계 예시 #1
RPG 데이터베이스를 설계할 때 [ID, 이름, 직업, 종족, 레벨, 인벤토리] 열을 가진 테이블을 캐릭터 테이블로 만든다면?
-> 인벤토리는 어떻게? -> string으로 '물약 2, 나뭇가지 1, 단검 1, ...' 식이면 검색하기 매우 불편하다.

설계 예시 #2
그렇다면 인벤토리를 나열하는 대신 아이템 코드, 이름, 개수로 분할한다.
[ID, 이름, 직업, 종족, 레벨, 레벨, 아이템코드, 아이템명, 아이템개수] 형태가 된다. (실제론 아이템마다의 고유 코드도 필요함)
-> 아이템 하나마다 [ID, 이름, 직업, 종족, 레벨] 이 반복 작성된다.

설계 예시 #3
캐릭터와 아이템 정보를 분할해야 한다!
플레이어 테이블은 [ID, 이름, 직업, 종족, 레벨], 인벤토리 테이블을 [ID, 아이템코드, 아이템명, 아이템개수] 로 분리한다.
-> 그런데 아이템코드와 아이템명은 해당 아이템의 고유한 정보인데, 불필요하게 두번씩 중복 작성해야 할까?

설계 예시 #4
인벤토리 테이블은 [ID, 아이템코드, 아이템개수]만 적고, 아이템별 정보는 따로 저장한다.
'아이템코드'라는 key를 통해 해당 아이템의 정보를 불러올 수 있다.